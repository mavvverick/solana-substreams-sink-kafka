// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/sf/substreams/sink/kafka/v1/kafka.proto

package pbkafka

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Publish struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Publish) Reset() {
	*x = Publish{}
	mi := &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Publish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publish) ProtoMessage() {}

func (x *Publish) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publish.ProtoReflect.Descriptor instead.
func (*Publish) Descriptor() ([]byte, []int) {
	return file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescGZIP(), []int{0}
}

func (x *Publish) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Attributes    []*Attribute           `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Message) GetAttributes() []*Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type Attribute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	mi := &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescGZIP(), []int{2}
}

func (x *Attribute) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Attribute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_proto_sf_substreams_sink_kafka_v1_kafka_proto protoreflect.FileDescriptor

const file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDesc = "" +
	"\n" +
	"-proto/sf/substreams/sink/kafka/v1/kafka.proto\x12\x1bsf.substreams.sink.kafka.v1\"K\n" +
	"\aPublish\x12@\n" +
	"\bmessages\x18\x01 \x03(\v2$.sf.substreams.sink.kafka.v1.MessageR\bmessages\"e\n" +
	"\aMessage\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12F\n" +
	"\n" +
	"attributes\x18\x02 \x03(\v2&.sf.substreams.sink.kafka.v1.AttributeR\n" +
	"attributes\"3\n" +
	"\tAttribute\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05valueBWZUgithub.com/streamingfast/substreams-sink-kafka/pb/sf/substreams/sink/kafka/v1;pbkafkab\x06proto3"

var (
	file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescOnce sync.Once
	file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescData []byte
)

func file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescGZIP() []byte {
	file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescOnce.Do(func() {
		file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDesc), len(file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDesc)))
	})
	return file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescData
}

var file_proto_sf_substreams_sink_kafka_v1_kafka_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_sf_substreams_sink_kafka_v1_kafka_proto_goTypes = []any{
	(*Publish)(nil),   // 0: sf.substreams.sink.kafka.v1.Publish
	(*Message)(nil),   // 1: sf.substreams.sink.kafka.v1.Message
	(*Attribute)(nil), // 2: sf.substreams.sink.kafka.v1.Attribute
}
var file_proto_sf_substreams_sink_kafka_v1_kafka_proto_depIdxs = []int32{
	1, // 0: sf.substreams.sink.kafka.v1.Publish.messages:type_name -> sf.substreams.sink.kafka.v1.Message
	2, // 1: sf.substreams.sink.kafka.v1.Message.attributes:type_name -> sf.substreams.sink.kafka.v1.Attribute
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_sf_substreams_sink_kafka_v1_kafka_proto_init() }
func file_proto_sf_substreams_sink_kafka_v1_kafka_proto_init() {
	if File_proto_sf_substreams_sink_kafka_v1_kafka_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDesc), len(file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_sf_substreams_sink_kafka_v1_kafka_proto_goTypes,
		DependencyIndexes: file_proto_sf_substreams_sink_kafka_v1_kafka_proto_depIdxs,
		MessageInfos:      file_proto_sf_substreams_sink_kafka_v1_kafka_proto_msgTypes,
	}.Build()
	File_proto_sf_substreams_sink_kafka_v1_kafka_proto = out.File
	file_proto_sf_substreams_sink_kafka_v1_kafka_proto_goTypes = nil
	file_proto_sf_substreams_sink_kafka_v1_kafka_proto_depIdxs = nil
}
